{"version":3,"sources":["components/Header/index.js","components/Layout/index.js","urlConfig.js","helper/axios.js","actions/constants.js","reducers/product.reducers.js","reducers/cart.reducers.js","reducers/index.js","store/index.js","actions/cart.actions.js","containers/Home/index.js","actions/product.actions.js","containers/Cart/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","Navbar","bg","expand","to","className","Toggle","aria-controls","Collapse","id","Nav","Layout","children","api","axiosInstance","axios","create","baseURL","productConstants","cartConstants","initState","products","loading","error","cartItems","updatingCart","rootReducer","combineReducers","product","state","action","type","payload","cart","store","createStore","applyMiddleware","thunk","getCartItems","dispatch","a","post","res","status","data","console","log","Home","useDispatch","useSelector","useState","setProducts","productsMatch","setProductsMatch","useEffect","get","loadProducts","Jumbotron","style","background","Row","marginTop","Col","md","span","offset","FormControl","placeholder","size","onChange","e","text","matches","filter","pro","regex","RegExp","match","searchProducts","target","value","map","item","index","border","textAlign","padding","fontSize","display","alignItems","justifyContent","Button","varient","onClick","_id","newQty","getState","qty","parseInt","quantity","localStorage","setItem","JSON","stringify","addToCart","Cart","item1","index1","width","App","setCartItems","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76b3c5a1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\n\r\n/**\r\n * @author\r\n * @function Header\r\n **/\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n      <Link to=\"/\" className=\"navbar-brand\">\r\n        Auto Complete Task\r\n      </Link>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"mr-auto\"></Nav>\r\n        <Nav>\r\n          <li className=\"nav-item\">\r\n            <NavLink to=\"/cart\" className=\"nav-link\">\r\n              Cart\r\n            </NavLink>\r\n          </li>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport Header from '../Header'\r\n\r\n/**\r\n* @author\r\n* @function Layout\r\n**/\r\n\r\nconst Layout = (props) => {\r\n  return(\r\n    <>\r\n    <Header />\r\n    {props.children}\r\n    \r\n    </>\r\n   )\r\n\r\n }\r\n\r\nexport default Layout","const baseUrl='https://auto-complete-mern.herokuapp.com/'\r\n// const baseUrl='http://localhost:2000'\r\nexport const api=`${baseUrl}/api/v1`;","import axios from 'axios';\r\nimport { api } from '../urlConfig';\r\nconst axiosInstance = axios.create({\r\n    baseURL : api\r\n})\r\nexport default axiosInstance;","\r\nexport const productConstants = {\r\n    GET_ALL_PRODUCT_REQUEST:'GET_ALL_PRODUCT_REQUEST',\r\n    GET_ALL_PRODUCT_SUCCESS:'GET_ALL_PRODUCT_SUCCESS',\r\n    GET_ALL_PRODUCT_FAILURE:'GET_ALL_PRODUCT_FAILURE',\r\n\r\n    \r\n\r\n}\r\nexport const cartConstants = {\r\n    ADD_TO_CART_REQUEST: \"ADD_TO_CART_REQUEST\",\r\n    ADD_TO_CART_SUCCESS: \"ADD_TO_CART_SUCCESS\",\r\n    ADD_TO_CART_FAILURE: \"ADD_TO_CART_FAILURE\",\r\n    \r\n\r\n    GET_CART_ITEM_REQUEST: \"GET_CART_ITEM_REQUEST\",\r\n    GET_CART_ITEM_SUCCESS:\"GET_CART_ITEM_SUCCESS\",\r\n  \r\n    REMOVE_CART_ITEM_REQUEST: \"REMOVE_CART_ITEM_REQUEST\",\r\n    REMOVE_CART_ITEM_SUCCESS: \"REMOVE_CART_ITEM_SUCCESS\",\r\n    REMOVE_CART_ITEM_FAILURE: \"REMOVE_CART_ITEM_FAILURE\",\r\n    RESET_CART: \"RESET_CART\",\r\n  };\r\n  ","import { productConstants } from \"../actions/constants\";\r\nconst initState = {\r\n  products: [],\r\n  loading: false,\r\n  error: \"\",\r\n};\r\nexport const productReducers = (state = initState, action) => {\r\n  \r\n\r\n  switch (action.type) {\r\n    case productConstants.GET_ALL_PRODUCT_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case productConstants.GET_ALL_PRODUCT_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        products: action.payload.products,\r\n        loading: false,\r\n      };\r\n      break;\r\n    case productConstants.GET_ALL_PRODUCT_FAILURE:\r\n      state = {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n      break;\r\n\r\n    \r\n  }\r\n  return state;\r\n};\r\n","import { cartConstants } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n    cartItems: [],\r\n    updatingCart: false,\r\n    error: null\r\n};\r\n\r\nexport const cartReducers = (state = initState, action) => {\r\n    switch(action.type){\r\n        case cartConstants.ADD_TO_CART_REQUEST:\r\n            state = {\r\n                ...state,\r\n                updatingCart: true\r\n            }\r\n            break;\r\n        case cartConstants.ADD_TO_CART_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                cartItems: action.payload.cartItems,\r\n                updatingCart: false\r\n            }\r\n            break;\r\n        case cartConstants.ADD_TO_CART_FAILURE:\r\n            state = {\r\n                ...state,\r\n                updatingCart: false,\r\n                error: action.payload.error\r\n            }\r\n            break;\r\n        case cartConstants.GET_CART_ITEM_REQUEST:\r\n            state = {\r\n                ...state,\r\n                updatingCart: true\r\n            }\r\n            break;\r\n        case cartConstants.GET_CART_ITEM_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                updatingCart: true,\r\n                cartItems: action.payload.cartItems,\r\n            }\r\n            break;\r\n        case cartConstants.RESET_CART:\r\n            state = {\r\n                ...initState\r\n            }\r\n    }\r\n    return state;\r\n}","\r\n\r\n\r\nimport { combineReducers } from \"redux\";\r\nimport { productReducers } from \"./product.reducers\";\r\nimport { cartReducers } from \"./cart.reducers\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    product:productReducers,\r\n    cart:cartReducers\r\n})\r\n\r\nexport default rootReducer;","import {createStore,applyMiddleware} from 'redux';\r\nimport rootReducer from '../reducers'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport default store;","\r\nimport axiosInstance from \"../helper/axios\";\r\nimport { cartConstants } from \"./constants\";\r\nimport store from \"../store\";\r\n\r\n\r\n const getCartItems = () => {\r\n    return async (dispatch) => {\r\n      try {\r\n        dispatch({ type: cartConstants.GET_CART_ITEM_REQUEST });\r\n        const res = await axiosInstance.post(`/user/getCartItems`);\r\n      \r\n         \r\n          if (res.status === 200) {\r\n            \r\n            dispatch({\r\n              type: cartConstants.GET_CART_ITEM_SUCCESS,\r\n              payload:{\r\n                cartItems: res.data\r\n            }\r\n            });\r\n          }\r\n        \r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n  };\r\n\r\n\r\n\r\n\r\n  \r\nexport const addToCart = (product, newQty = 1) => {\r\n\r\n    return async (dispatch) => {\r\n     \r\n      const {\r\n        cart: { cartItems }\r\n        \r\n      } = store.getState();\r\n      // console.log('action::products', product);\r\n      //const product = action.payload.product;\r\n      //const products = state.products;\r\n      const qty = cartItems[product._id]\r\n        ? parseInt(cartItems[product._id].qty + newQty)\r\n        : 1;\r\n      cartItems[product._id] = {\r\n        ...product,\r\n        qty,\r\n      };\r\n      \r\n      // if (auth.authenticate ) {\r\n        dispatch({ type: cartConstants.ADD_TO_CART_REQUEST });\r\n        const payload = {\r\n          cartItems: [\r\n            {\r\n              product: product._id,\r\n              quantity: qty,\r\n            },\r\n          ],\r\n        };\r\n        console.log(\"PAYLOAD_ADDTOCART\",payload);\r\n        const res = await axiosInstance.post(`/cart/addtocart`, payload);\r\n        console.log(res);\r\n        if (res.status === 201) {\r\n          dispatch(getCartItems());\r\n          \r\n        }\r\n      // } else {\r\n        localStorage.setItem(\"cart\", JSON.stringify(cartItems));\r\n      // }\r\n  \r\n      console.log(\"addToCart::\", cartItems);\r\n  \r\n      dispatch({\r\n        type: cartConstants.ADD_TO_CART_SUCCESS,\r\n        payload: { cartItems },\r\n      });\r\n    };\r\n  };\r\n\r\n  \r\nexport const removeCartItem = (payload) => {\r\n    return async (dispatch) => {\r\n      try {\r\n        dispatch({ type: cartConstants.REMOVE_CART_ITEM_REQUEST });\r\n        const res = await axiosInstance.post(`/user/cart/removeItem`, { payload });\r\n        if (res.status === 202) {\r\n          dispatch({ type: cartConstants.REMOVE_CART_ITEM_SUCCESS });\r\n          dispatch(getCartItems());\r\n        } else {\r\n          const { error } = res.data;\r\n          dispatch({\r\n            type: cartConstants.REMOVE_CART_ITEM_FAILURE,\r\n            payload: { error },\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n  };\r\n\r\n  \r\nexport const updateCart = () => {\r\n    return async (dispatch) => {\r\n      \r\n      let cartItems = localStorage.getItem(\"cart\")\r\n        ? JSON.parse(localStorage.getItem(\"cart\"))\r\n        : null;\r\n  \r\n      \r\n  \r\n      \r\n        localStorage.removeItem(\"cart\");\r\n        //dispatch(getCartItems());\r\n        if (cartItems) {\r\n          const payload = {\r\n            cartItems: Object.keys(cartItems).map((key, index) => {\r\n              return {\r\n                quantity: cartItems[key].qty,\r\n                product: cartItems[key]._id,\r\n              };\r\n            }),\r\n          };\r\n          if (Object.keys(cartItems).length > 0) {\r\n            const res = await axiosInstance.post(`/user/cart/addtocart`, payload);\r\n            if (res.status === 201) {\r\n              dispatch(getCartItems());\r\n            }\r\n          }\r\n        } else {\r\n          dispatch(getCartItems());\r\n        }\r\n      \r\n        if (cartItems) {\r\n          dispatch({\r\n            type: cartConstants.ADD_TO_CART_SUCCESS,\r\n            payload: { cartItems },\r\n          });\r\n        }\r\n      \r\n    };\r\n  };\r\n  \r\n  export { getCartItems };","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Layout from \"../../components/Layout\";\r\nimport {\r\n  Jumbotron,\r\n  FormControl,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  \r\n} from \"react-bootstrap\";\r\n// import axios from \"axios\";\r\nimport { addToCart, getAllProduct } from \"../../actions\";\r\n\r\n/**\r\n * @author\r\n * @function Home\r\n **/\r\n\r\nconst Home = (props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const product = useSelector((state) => state.product);\r\n  \r\n  const [products, setProducts] = useState([]);\r\n  const [productsMatch, setProductsMatch] = useState([]);\r\n  useEffect(() => {\r\n    \r\n      dispatch(getAllProduct());\r\n    \r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const loadProducts = async () => {\r\n     \r\n      // const response = await axios.get(\r\n      //   \"http://localhost:2000/api/v1/allproducts\"\r\n      // );\r\n      // console.log(\"RESPONSE\", response.data.data)\r\n      // setProducts(response.data.data);\r\n\r\n      setProducts(product.products.data);\r\n    };\r\n    loadProducts();\r\n  }, [product.products.data]);\r\n\r\n\r\n  \r\n  console.log(\"PRODUCT\", product.products.data)\r\n\r\n\r\n  const searchProducts = (text) => {\r\n    let matches = products.filter((pro) => {\r\n      const regex = new RegExp(`${text}`, \"gi\");\r\n      return pro.product.match(regex);\r\n    });\r\n    setProductsMatch(matches);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <Jumbotron style={{ background: \"#fff\" }} className=\"text-center\">\r\n        <Row style={{ marginTop: \"50px\" }}>\r\n          <Col md={{ span: 6, offset: 3 }}>\r\n            <h3>Search Your Product</h3>\r\n            <FormControl\r\n              type=\"text\"\r\n              placeholder=\"ex: sakthi masala\"\r\n              size=\"sm\"\r\n              className=\"mb-3\"\r\n              onChange={(e) => searchProducts(e.target.value)}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        { productsMatch &&\r\n          productsMatch.map((item, index) => (\r\n            <div key={index}>\r\n              <Col style={{border:\"1px solid #ddd\", textAlign:'left',padding:'5px',fontSize:\"13px\"}} md={{ span: 6, offset: 3 }}>\r\n                \r\n                \r\n                <div style={{display:\"flex\", alignItems:\"center\",justifyContent:\"space-between\" }}>\r\n                  <div>{item.product}</div>\r\n                  <div><Button \r\n                  value={item.product} \r\n                   varient=\"primary\"\r\n                   onClick={() => {\r\n                    const { _id, product } = item;\r\n                    dispatch(addToCart({ _id, product }));\r\n                    \r\n                  }}\r\n                   >Add</Button></div>\r\n                \r\n                \r\n                </div>\r\n              </Col>\r\n              \r\n            </div>\r\n          ))}\r\n      </Jumbotron>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import axiosInstance from \"../helper/axios\";\r\nimport { productConstants } from \"./constants\";\r\n\r\nexport const getAllProduct= () =>{\r\n    return async (dispatch) =>{\r\n        dispatch({type: productConstants.GET_ALL_PRODUCT_REQUEST});\r\n        const res = await axiosInstance.get('/allproducts');\r\n        \r\n        console.log(\"RESPONSE\",res.data)\r\n        if(res.status === 200){\r\n            \r\n            dispatch({\r\n                type:productConstants.GET_ALL_PRODUCT_SUCCESS,\r\n                payload:{\r\n                    products: res.data\r\n                }\r\n            })\r\n        }else{\r\n            dispatch({\r\n                type:productConstants.GET_ALL_PRODUCT_FAILURE,\r\n                payload:{\r\n                    error: res.data.error\r\n                }\r\n            })\r\n        }\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCartItems } from \"../../actions\";\r\nimport Layout from '../../components/Layout'\r\nimport CartItem from \"./CartItem\";\r\n/**\r\n* @author\r\n* @function Cart\r\n**/\r\n\r\nconst Cart = (props) => {\r\n\r\n  // const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  const [cartItems, setCartItems] = useState(cart.cartItems);\r\n  // useEffect(() => {\r\n  //   dispatch(getCartItems());\r\n  //   setCartItems(cart.cartItems);\r\n  // }, [cart.cartItems]);\r\n  // useEffect(() => {\r\n  // }, []);\r\n\r\n \r\n\r\nconsole.log(\"CARDITEMS\", cartItems);\r\n\r\n\r\n// if (props.onlyCartItems) {\r\n//   return (\r\n//     <>\r\n//       {Object.keys(cartItems).map((key, index) => (\r\n//         // <CartItem\r\n//         //   key={index}\r\n//         //   cartItem={cartItems[key]}\r\n//         // />\r\n//         <h1 key={index}>{cartItems[key]}</h1>\r\n//       ))}\r\n//     </>\r\n//   );\r\n// }\r\n\r\n  return(\r\n    <Layout >\r\n        <h3>Cart Page</h3>\r\n        \r\n        {\r\n          cartItems.cart.map((item , index) => (\r\n            <div key={index}>{\r\n              item.cartItems.map((item1, index1)=>(\r\n                <div key={index1} style={{border:'1px solid #ddd',width:'30%'}}  >\r\n\r\n                  <div>\r\n                    <h5>Product Id : <span>{item1.product}</span></h5>\r\n                  </div>\r\n                  <div>\r\n                    <h4>Quantity : <span>{item1.quantity}</span></h4>\r\n                    \r\n                  </div>\r\n                  \r\n                  </div>\r\n              ))\r\n            }\r\n            </div>\r\n          ))\r\n            \r\n        }\r\n\r\n\r\n      {/* {Object.keys(cartItems).map((key, index) => (\r\n            <CartItem\r\n              key={index}\r\n              cartItem={cartItems[key]}\r\n              \r\n            />\r\n            \r\n          ))} */}\r\n        \r\n    </Layout>\r\n   )\r\n\r\n }\r\n\r\nexport default Cart","\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from './containers/Home'\nimport Cart from './containers/Cart'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCartItems } from \"./actions\";\nfunction App() {\n\n  \n  const dispatch = useDispatch();\n  const cart = useSelector((state) => state.cart);\n  const [cartItems, setCartItems] = useState(cart.cartItems);\n  useEffect(() => {\n    dispatch(getCartItems());\n    setCartItems(cart.cartItems);\n  }, [cart.cartItems]);\n  useEffect(() => {\n  }, []);\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/cart\"  component={Cart} />\n        </Switch>\n      </Router>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux'\nimport store from './store'\n\nwindow.store = store\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n    <App />\n  </React.StrictMode>\n   </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}